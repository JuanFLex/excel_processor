<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Processing Details</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartkick"></script>
</head>
<body>
    <div class="min-h-screen bg-white">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 lg:py-12">
            <!-- Header -->
            <div class="mb-12">
                <%= link_to "← Back", file_uploads_path, class: "text-sm text-gray-600 hover:text-gray-900 mb-6 inline-block" %>
                <div class="flex justify-between items-start">
                    <div>
                        <h1 class="text-2xl font-medium text-gray-900"><%= @processed_file.original_filename %></h1>
                        <p class="text-sm text-gray-500 mt-1">ID <%= @processed_file.id %></p>
                    </div>
                    <div class="flex gap-3">
                        <% if @processed_file.completed? && @processed_file.result_file_path.present? %>
                            <%= link_to "Download Result", download_file_upload_path(@processed_file),
                                 class: "px-5 py-2.5 bg-gray-900 hover:bg-gray-800 text-white text-sm font-medium rounded-md transition-colors" %>
                            <%= link_to "Remap & Reprocess", remap_file_upload_path(@processed_file),
                                 class: "px-5 py-2.5 border border-gray-300 hover:border-gray-400 text-gray-700 hover:text-gray-900 text-sm font-medium rounded-md transition-colors" %>
                        <% end %>
                    </div>
                </div>
            </div>

            <!-- Status Bar -->
            <% status_color = {'completed' => 'green', 'processing' => 'blue', 'queued' => 'amber', 'failed' => 'red'}[@processed_file.status] || 'gray' %>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-6 p-6 bg-gray-50 rounded-lg mb-12">
                <div>
                    <p class="text-xs uppercase tracking-wider text-gray-500 mb-1">Status</p>
                    <p class="text-sm font-medium text-<%= status_color %>-600"><%= @processed_file.status.titleize %></p>
                </div>
                <% [['Uploaded', @processed_file.created_at],
                     ['Completed', @processed_file.processed_at],
                     ['Total Items', @processed_file.processed_items.count]].each do |label, value| %>
                    <div>
                        <p class="text-xs uppercase tracking-wider text-gray-500 mb-1"><%= label %></p>
                        <p class="text-sm font-medium text-gray-900">
                            <%= value.is_a?(Time) ? value.strftime("%b %d · %H:%M") : (value || '—') %>
                        </p>
                    </div>
                <% end %>
            </div>

            <!-- Main Content -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Sección de gráficas -->
                <section>
                    <h2 class="text-sm font-medium text-gray-900 uppercase tracking-wider mb-6">Scope Analysis</h2>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Gráfica de Part Count -->
                        <div class="bg-white border border-gray-200 rounded-lg p-6">
                            <h3 class="text-lg font-medium text-gray-900 text-center mb-4">Part Count</h3>
                            <div class="relative h-64">
                                <div class="absolute inset-0 flex items-center justify-center z-10 pointer-events-none">
                                    <div class="text-center">
                                        <p class="text-3xl font-bold text-gray-900">
                                            <%= number_with_delimiter(@processed_file.processed_items.count) %>
                                        </p>
                                        <p class="text-xs text-gray-500 mt-1">Total parts</p>
                                    </div>
                                </div>
                                <%
                                  scope_data = @processed_file.processed_items.group(:scope).count
                                  # Mapeo dinámico de colores basado en el scope
                                  scope_colors = scope_data.keys.map do |scope|
                                    case scope
                                    when "In scope" then "#10B981"    # Verde
                                    when "Out of scope" then "#EF4444" # Rojo
                                    else "#F59E0B"                     # Naranja para otros
                                    end
                                  end
                                %>
                                <%= pie_chart scope_data,
                                    height: "100%",
                                    colors: scope_colors,
                                    donut: true,
                                    library: {
                                        cutout: '65%',
                                        plugins: {
                                            legend: {
                                                position: 'bottom',
                                                labels: {
                                                    boxWidth: 12,
                                                    padding: 20,
                                                    font: { size: 12 }
                                                }
                                            },
                                            tooltip: {
                                                callbacks: {
                                                    label: 'function(context) {
                                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                        const percentage = Math.round((context.raw / total) * 100);
                                                        return `${context.label}: ${context.raw} (${percentage}%)`;
                                                    }'
                                                }
                                            }
                                        }
                                    } %>
                            </div>
                        </div>
                        
                        <!-- Gráfica de EAR -->
                        <div class="bg-white border border-gray-200 rounded-lg p-6">
                            <%
                            ear_by_scope = @processed_file.processed_items.to_a
                                .group_by(&:scope)
                                .transform_values { |items| items.sum { |item| item.ear_value || 0 } }
                            total_ear = ear_by_scope.values.sum
                            %>
                            <h3 class="text-lg font-medium text-gray-900 text-center mb-4">EAR Value</h3>
                            <div class="relative h-64">
                                <div class="absolute inset-0 flex items-center justify-center z-10 pointer-events-none">
                                    <div class="text-center">
                                        <p class="text-3xl font-bold text-gray-900">
                                            <%= number_to_currency(total_ear, precision: 0) %>
                                        </p>
                                        <p class="text-xs text-gray-500 mt-1">Total EAR</p>
                                    </div>
                                </div>
                                <%
                                  # Mapeo dinámico de colores para EAR también
                                  ear_colors = ear_by_scope.keys.map do |scope|
                                    case scope
                                    when "In scope" then "#10B981"    # Verde
                                    when "Out of scope" then "#EF4444" # Rojo
                                    else "#F59E0B"                     # Naranja para otros
                                    end
                                  end
                                %>
                                <%= pie_chart ear_by_scope,
                                    height: "100%",
                                    colors: ear_colors,
                                    donut: true,
                                    library: {
                                        cutout: '65%',
                                        plugins: {
                                            legend: {
                                                position: 'bottom',
                                                labels: {
                                                    boxWidth: 12,
                                                    padding: 20,
                                                    font: { size: 12 }
                                                }
                                            },
                                            tooltip: {
                                                callbacks: {
                                                    label: 'function(context) {
                                                        const formatter = new Intl.NumberFormat("en-US", {
                                                            style: "currency",
                                                            currency: "USD",
                                                            minimumFractionDigits: 0,
                                                            maximumFractionDigits: 0
                                                        });
                                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                        const percentage = Math.round((context.raw / total) * 100);
                                                        return `${context.label}: ${formatter.format(context.raw)} (${percentage}%)`;
                                                    }'
                                                }
                                            }
                                        }
                                    } %>
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Processing Summary -->
                <section>
                    <h2 class="text-sm font-medium text-gray-900 uppercase tracking-wider mb-6">Processing Summary</h2>
                    
                    <% if @items_sample&.any? %>
                        <!-- Títulos de columnas -->
                        <div class="grid grid-cols-4 gap-4 mb-2">
                            <div class="text-center">
                                <h3 class="text-sm font-medium text-gray-700 uppercase tracking-wider">In Scope Total</h3>
                            </div>
                            <div class="text-center">
                                <h3 class="text-sm font-medium text-gray-700 uppercase tracking-wider">Previously Quoted</h3>
                            </div>
                            <div class="text-center">
                                <h3 class="text-sm font-medium text-gray-700 uppercase tracking-wider">Meeting Threshold</h3>
                            </div>
                            <div class="text-center">
                                <h3 class="text-sm font-medium text-gray-700 uppercase tracking-wider">W/Crosses Meeting Threshold</h3>
                            </div>
                        </div>

                        <!-- Fila 1: EAR Values -->
                        <div class="grid grid-cols-4 gap-4 mb-4">
                            <div class="p-6 bg-white border border-blue-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-blue-700">
                                    $<%= number_to_human(@analytics[:in_scope_total][:ear], precision: 2).gsub(/(Million|Thousand|Billion)/, '<span class="text-xs">\1</span>').html_safe %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-blue-600 mt-1">EAR</p>
                            </div>
                            
                            <div class="p-6 bg-white border border-green-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-green-700">
                                    $<%= number_to_human(@analytics[:previously_quoted][:ear], precision: 2).gsub(/(Million|Thousand|Billion)/, '<span class="text-xs">\1</span>').html_safe %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-green-600 mt-1">EAR</p>
                            </div>
                            
                            <div class="p-6 bg-white border border-orange-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-orange-700">
                                    $<%= number_to_human(@analytics[:meeting_threshold][:ear], precision: 2).gsub(/(Million|Thousand|Billion)/, '<span class="text-xs">\1</span>').html_safe %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-orange-600 mt-1">EAR</p>
                            </div>
                            
                            <div class="p-6 bg-white border border-purple-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-purple-700">
                                    $<%= number_to_human(@analytics[:crosses_threshold][:ear], precision: 2).gsub(/(Million|Thousand|Billion)/, '<span class="text-xs">\1</span>').html_safe %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-purple-600 mt-1">EAR</p>
                            </div>
                        </div>

                        <!-- Fila 2: Part Count -->
                        <div class="grid grid-cols-4 gap-4 mb-6">
                            <div class="p-6 bg-white border border-blue-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-blue-700">
                                    <%= number_with_delimiter(@analytics[:in_scope_total][:count]) %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-blue-600 mt-1">Parts</p>
                            </div>
                            
                            <div class="p-6 bg-white border border-green-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-green-700">
                                    <%= number_with_delimiter(@analytics[:previously_quoted][:count]) %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-green-600 mt-1">Parts</p>
                            </div>
                            
                            <div class="p-6 bg-white border border-orange-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-orange-700">
                                    <%= number_with_delimiter(@analytics[:meeting_threshold][:count]) %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-orange-600 mt-1">Parts</p>
                            </div>
                            
                            <div class="p-6 bg-white border border-purple-200 rounded-lg text-center">
                                <p class="text-2xl font-semibold text-purple-700">
                                    <%= number_with_delimiter(@analytics[:crosses_threshold][:count]) %>
                                </p>
                                <p class="text-xs uppercase tracking-wider text-purple-600 mt-1">Parts</p>
                            </div>
                        </div>

                        
                    <% else %>
                        <div class="bg-gray-50 rounded-lg p-12 text-center">
                            <p class="text-sm text-gray-500"><%= @processed_file.processing? ? 'Processing in progress' : 'No items processed yet' %></p>
                        </div>
                    <% end %>
                </section>
            </div>

            <!-- Sample Items -->
                        <%
                        # 1. Obtener mapping de commodity (level3) -> level1 
                        commodity_to_level1 = {}
                        unique_commodities = @processed_file.processed_items.pluck(:commodity).uniq.compact.reject(&:blank?)
                        
                        unique_commodities.each do |commodity|
                            commodity_ref = CommodityReference.find_by_commodity_exact(commodity)
                            level1 = commodity_ref&.level1_desc || 'Unknown Level 1'
                            commodity_to_level1[commodity] = level1
                        end
                        
                        # 2. Agrupar processed_items por level1
                        level1_summary = {}
                        @processed_file.processed_items.each do |item|
                            level1 = commodity_to_level1[item.commodity] || 'Unknown Level 1'
                            
                            level1_summary[level1] ||= { parts: 0, ear: 0, items: [] }
                            level1_summary[level1][:parts] += 1
                            level1_summary[level1][:ear] += (item.ear_value || 0)
                            level1_summary[level1][:items] << item
                        end
                        
                        # 3. Ordenar por EAR descendente para mostrar los más importantes primero
                        level1_summary = level1_summary.sort_by { |level1, data| -data[:ear] }.to_h
                        %>

                        <h3 class="text-xs font-medium text-gray-700 uppercase tracking-wider mb-3">
                        Level 1 Summary <span class="text-gray-400 font-normal">(<%= level1_summary.size %> categories, $<%= number_to_human(level1_summary.values.sum { |data| data[:ear] }, precision: 1) %> total)</span>
                        </h3>

                        <div class="bg-white border border-gray-200 rounded-lg overflow-hidden">
                        <table class="min-w-full">
                            <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider">Level 1 Category</th>
                                <th class="px-4 py-3 text-center text-xs font-medium text-gray-700 uppercase tracking-wider">Parts Count</th>
                                <th class="px-4 py-3 text-right text-xs font-medium text-gray-700 uppercase tracking-wider">Total EAR</th>
                                <th class="px-4 py-3 text-center text-xs font-medium text-gray-700 uppercase tracking-wider">% of Total</th>
                            </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-100">
                            <% total_ear = level1_summary.values.sum { |data| data[:ear] } %>
                            <% level1_summary.each do |level1, data| %>
                                <%
                                percentage = total_ear > 0 ? ((data[:ear] / total_ear) * 100).round(1) : 0
                                # Color basado en el porcentaje para destacar categorías importantes
                                color_class = case percentage
                                            when 0..5 then "text-gray-600"
                                            when 5..15 then "text-blue-600" 
                                            when 15..30 then "text-orange-600"
                                            else "text-green-600 font-semibold"
                                            end
                                %>
                                <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 text-sm font-medium text-gray-900">
                                    <%= level1 %>
                                    <% if level1 == 'Unknown Level 1' %>
                                    <span class="inline-flex px-2 py-1 text-xs font-medium rounded text-red-700 bg-red-50 ml-2">
                                        Unmapped
                                    </span>
                                    <% end %>
                                </td>
                                <td class="px-4 py-3 text-center text-sm text-gray-900">
                                    <%= number_with_delimiter(data[:parts]) %>
                                </td>
                                <td class="px-4 py-3 text-right text-sm <%= color_class %>">
                                    <%= number_to_currency(data[:ear], precision: 0) %>
                                </td>
                                <td class="px-4 py-3 text-center text-sm text-gray-600">
                                    <div class="flex items-center justify-center">
                                    <div class="w-12 bg-gray-200 rounded-full h-2 mr-2">
                                        <div class="bg-blue-500 h-2 rounded-full" style="width: <%= [percentage, 100].min %>%"></div>
                                    </div>
                                    <%= percentage %>%
                                    </div>
                                </td>
                                </tr>
                            <% end %>
                            
                            <!-- Fila de totales -->
                            <tr class="bg-gray-50 font-semibold">
                                <td class="px-4 py-3 text-sm text-gray-900">Total</td>
                                <td class="px-4 py-3 text-center text-sm text-gray-900">
                                <%= number_with_delimiter(level1_summary.values.sum { |data| data[:parts] }) %>
                                </td>
                                <td class="px-4 py-3 text-right text-sm text-gray-900">
                                <%= number_to_currency(total_ear, precision: 0) %>
                                </td>
                                <td class="px-4 py-3 text-center text-sm text-gray-900">100%</td>
                            </tr>
                            </tbody>
                        </table>
                    </div>

            <!-- Column Mapping -->
            <div class="mt-12">
                <section>
                    <h2 class="text-sm font-medium text-gray-900 uppercase tracking-wider mb-6">Column Mapping</h2>
                    <% if @processed_file.column_mapping&.any? %>
                        <div class="bg-white border border-gray-200 rounded-lg overflow-hidden">
                            <table class="min-w-full">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <% ['Target Field', 'Source Column', 'Status'].each_with_index do |header, i| %>
                                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider <%= 'text-right' if i == 2 %>">
                                                <%= header %>
                                            </th>
                                        <% end %>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-100">
                                    <% @processed_file.column_mapping.each do |target, source| %>
                                        <tr>
                                            <td class="px-6 py-4 text-sm font-medium text-gray-900"><%= target %></td>
                                            <td class="px-6 py-4 text-sm text-gray-600"><%= source || '—' %></td>
                                            <td class="px-6 py-4 text-right text-xs font-medium <%= source ? 'text-green-600' : 'text-red-600' %>">
                                                <%= source ? 'Mapped' : 'Missing' %>
                                            </td>
                                        </tr>
                                    <% end %>
                                </tbody>
                            </table>
                        </div>
                    <% else %>
                        <div class="bg-gray-50 rounded-lg p-12 text-center">
                            <p class="text-sm text-gray-500">No mapping data available</p>
                        </div>
                    <% end %>
                </section>
            </div>

            <% if @processed_file.error_message.present? %>
                <div class="mt-8 p-6 bg-red-50 border border-red-200 rounded-lg">
                    <h3 class="text-sm font-medium text-red-900 mb-2">Processing Error</h3>
                    <p class="text-sm text-red-700"><%= @processed_file.error_message %></p>
                </div>
            <% end %>
        </div>
    </div>

    <!-- Auto-reload for processing files -->
    <% if @processed_file.status == 'queued' || @processed_file.processing? %>
        <script>
            // Auto-refresh every 5 seconds for processing status
            setTimeout(function() {
                window.location.reload();
            }, 5000);
        </script>
    <% end %>
</body>
</html>